{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,iBAAkB,SAAQ,SAAS;IAC9C,aAAa;QACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,2BAA2B,CAAC,OAAqD;QACrF,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IACD,KAAK,CAAC,iBAAiB;QACrB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,gCAAgC,CAAC,OAAwD;QAC7F,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IACD,KAAK,CAAC,mBAAmB;QACvB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,OAAwD;QAC1E,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAmD;QACrE,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\n\r\nimport type { AccountManagerPlugin } from './definitions';\r\n\r\nexport class AccountManagerWeb extends WebPlugin implements AccountManagerPlugin {\r\n  accountPicker(): Promise<{}> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async getAccount(): Promise<{}> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async getExistingAccountAuthToken(options: { userName: string; authTokenType: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.' + options);\r\n  }\r\n  async showAccountPicker(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async getTokenForAccountCreateIfNeeded(options: { accountType: string; authTokenType: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.' + options);\r\n  }\r\n  async invalidateAuthToken(): Promise<void> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async addNewAccount(options: { accountType: string; authTokenType: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.' + options);\r\n  }\r\n\r\n  async authenticator(options: { userName: string; AccountType: string; }): Promise<void> {\r\n    throw new Error('Method not implemented.' + options);\r\n  }\r\n}\r\n"]}