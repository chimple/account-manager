{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,iBACX,SAAQ,SAAS;IAGjB,aAAa;QACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,2BAA2B,CAAC,OAGjC;QACC,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IACD,KAAK,CAAC,iBAAiB;QACrB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,gCAAgC,CAAC,OAGtC;QACC,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IACD,KAAK,CAAC,mBAAmB;QACvB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,OAGnB;QACC,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAGnB;QACC,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AccountManagerPlugin, authData } from './definitions';\n\nexport class AccountManagerWeb\n  extends WebPlugin\n  implements AccountManagerPlugin\n{\n  accountPicker(): Promise<authData> {\n    throw new Error('Method not implemented.');\n  }\n  async getAccount(): Promise<{}> {\n    throw new Error('Method not implemented.');\n  }\n  async getExistingAccountAuthToken(options: {\n    userName: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async showAccountPicker(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async getTokenForAccountCreateIfNeeded(options: {\n    accountType: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n  async invalidateAuthToken(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n  async addNewAccount(options: {\n    accountType: string;\n    authTokenType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n\n  async authenticator(options: {\n    userName: string;\n    AccountType: string;\n  }): Promise<void> {\n    throw new Error('Method not implemented.' + options);\n  }\n}\n"]}